{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { loadStripe } from \"@stripe/stripe-js\";\n// // import CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\n// // import StripeCheckoutButton from \"../../components/stripe-button/stripe-button-component\";\n// // import { CartContext } from \"../../providers/cart/cart.provider\";\n// import \"./checkout.styles.scss\";\n// const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n// const ProductDisplay = ({ handleClick }) => (\n//   <>\n//     <div className=\"container\">\n//       <div className=\"product\">\n//         <img\n//           src=\"https://i.imgur.com/EHyR2nP.png\"\n//           alt=\"The cover of Stubborn Attachments\"\n//         />\n//         <div className=\"description\">\n//           <h3>Stubborn Attachments</h3>\n//           <h5>$280.00</h5>\n//         </div>\n//       </div>\n//       <div>\n//         <button\n//           className=\"btn btn-dark\"\n//           type=\"button\"\n//           id=\"checkout-button\"\n//           role=\"link\"\n//           onClick={handleClick}\n//         >\n//           Checkout\n//         </button>\n//       </div>\n//     </div>\n//   </>\n// );\n// const Message = ({ message }) => (\n//   <section>\n//     <p>{message}</p>\n//   </section>\n// );\n// export default function CheckoutPage() {\n//   // const { cartItems, cartTotal } = useContext(CartContext);\n//   const [message, setMessage] = useState(\"\");\n//   useEffect(() => {\n//     // Check to see if this is a redirect back from Checkout\n//     const query = new URLSearchParams(window.location.search);\n//     if (query.get(\"success\")) {\n//       setMessage(\"Order placed! You will receive an email confirmation.\");\n//     }\n//     if (query.get(\"canceled\")) {\n//       setMessage(\n//         \"Order canceled -- continue to shop around and checkout when you're ready.\"\n//       );\n//     }\n//   }, []);\n//   const handleClick = async (e) => {\n//     e.preventDefault();\n//     const stripe = await stripePromise;\n//     fetch(\"http://localhost:5000/create-checkout-session\", { method: \"POST\" })\n//       .then(function (response) {\n//         return response.json();\n//       })\n//       .then(function (session) {\n//         return stripe.redirectToCheckout({ sessionId: session.id });\n//       })\n//       .then(function (result) {\n//         if (result.error) {\n//           alert(result.error.message);\n//         }\n//       });\n//     return message ? (\n//       <Message message={message} />\n//     ) : (\n//       <ProductDisplay handleClick={handleClick} />\n//     );\n//   };\n// }\nimport React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function componentName() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/checkout/checkout.component.jsx"],"names":["React","componentName"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,sBACE,qCADF;AAKD","sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { loadStripe } from \"@stripe/stripe-js\";\n// // import CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\n// // import StripeCheckoutButton from \"../../components/stripe-button/stripe-button-component\";\n// // import { CartContext } from \"../../providers/cart/cart.provider\";\n// import \"./checkout.styles.scss\";\n\n// const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\n// const ProductDisplay = ({ handleClick }) => (\n//   <>\n//     <div className=\"container\">\n//       <div className=\"product\">\n//         <img\n//           src=\"https://i.imgur.com/EHyR2nP.png\"\n//           alt=\"The cover of Stubborn Attachments\"\n//         />\n//         <div className=\"description\">\n//           <h3>Stubborn Attachments</h3>\n//           <h5>$280.00</h5>\n//         </div>\n//       </div>\n//       <div>\n//         <button\n//           className=\"btn btn-dark\"\n//           type=\"button\"\n//           id=\"checkout-button\"\n//           role=\"link\"\n//           onClick={handleClick}\n//         >\n//           Checkout\n//         </button>\n//       </div>\n//     </div>\n//   </>\n// );\n\n// const Message = ({ message }) => (\n//   <section>\n//     <p>{message}</p>\n//   </section>\n// );\n\n// export default function CheckoutPage() {\n//   // const { cartItems, cartTotal } = useContext(CartContext);\n//   const [message, setMessage] = useState(\"\");\n\n//   useEffect(() => {\n//     // Check to see if this is a redirect back from Checkout\n//     const query = new URLSearchParams(window.location.search);\n//     if (query.get(\"success\")) {\n//       setMessage(\"Order placed! You will receive an email confirmation.\");\n//     }\n//     if (query.get(\"canceled\")) {\n//       setMessage(\n//         \"Order canceled -- continue to shop around and checkout when you're ready.\"\n//       );\n//     }\n//   }, []);\n\n//   const handleClick = async (e) => {\n//     e.preventDefault();\n//     const stripe = await stripePromise;\n\n//     fetch(\"http://localhost:5000/create-checkout-session\", { method: \"POST\" })\n//       .then(function (response) {\n//         return response.json();\n//       })\n//       .then(function (session) {\n//         return stripe.redirectToCheckout({ sessionId: session.id });\n//       })\n//       .then(function (result) {\n//         if (result.error) {\n//           alert(result.error.message);\n//         }\n//       });\n\n//     return message ? (\n//       <Message message={message} />\n//     ) : (\n//       <ProductDisplay handleClick={handleClick} />\n//     );\n//   };\n// }\n\n\nimport React from 'react';\n\nexport default function componentName() {\n  return (\n    <>\n    \n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}