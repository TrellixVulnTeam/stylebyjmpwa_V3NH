{"ast":null,"code":"// import React, { useContext, useState, useEffect } from \"react\";\n// import { auth } from \"../firebase/config\";\n// const AuthContext = React.createContext();\n// export function useAuth() {\n//   return useContext(AuthContext);\n// }\n// export function AuthProvider({ children }) {\n//   const [currentUser, setCurrentUser] = useState();\n//   const [loading, setLoading] = useState(true);\n//   function signup(email, password) {\n//     return auth.createUserWithEmailAndPassword(email, password);\n//   }\n//   function login(email, password) {\n//     return auth.signInWithEmailAndPassword(email, password);\n//   }\n//   function logout() {\n//     return auth.signOut();\n//   }\n//   function resetPassword(email) {\n//     return auth.sendPasswordResetEmail(email);\n//   }\n//   function updateEmail(email) {\n//     return currentUser.updateEmail(email);\n//   }\n//   function updatePassword(password) {\n//     return currentUser.updatePassword(password);\n//   }\n//   useEffect(() => {\n//     const unsubscribe = auth.onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setLoading(false);\n//     });\n//     return unsubscribe;\n//   }, []);\n//   const value = {\n//     currentUser,\n//     login,\n//     signup,\n//     logout,\n//     resetPassword,\n//     updateEmail,\n//     updatePassword,\n//   };\n//   return (\n//     <AuthContext.Provider value={value}>\n//       {!loading && children}\n//     </AuthContext.Provider>\n//   );\n// }","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/firebase/context.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useContext, useState, useEffect } from \"react\";\n// import { auth } from \"../firebase/config\";\n\n// const AuthContext = React.createContext();\n\n// export function useAuth() {\n//   return useContext(AuthContext);\n// }\n\n// export function AuthProvider({ children }) {\n//   const [currentUser, setCurrentUser] = useState();\n//   const [loading, setLoading] = useState(true);\n\n//   function signup(email, password) {\n//     return auth.createUserWithEmailAndPassword(email, password);\n//   }\n\n//   function login(email, password) {\n//     return auth.signInWithEmailAndPassword(email, password);\n//   }\n\n//   function logout() {\n//     return auth.signOut();\n//   }\n\n//   function resetPassword(email) {\n//     return auth.sendPasswordResetEmail(email);\n//   }\n\n//   function updateEmail(email) {\n//     return currentUser.updateEmail(email);\n//   }\n\n//   function updatePassword(password) {\n//     return currentUser.updatePassword(password);\n//   }\n\n//   useEffect(() => {\n//     const unsubscribe = auth.onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//       setLoading(false);\n//     });\n\n//     return unsubscribe;\n//   }, []);\n\n//   const value = {\n//     currentUser,\n//     login,\n//     signup,\n//     logout,\n//     resetPassword,\n//     updateEmail,\n//     updatePassword,\n//   };\n\n//   return (\n//     <AuthContext.Provider value={value}>\n//       {!loading && children}\n//     </AuthContext.Provider>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}