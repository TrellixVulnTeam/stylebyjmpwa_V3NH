{"ast":null,"code":"var _jsxFileName = \"/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/auth/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\"; // redux\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../redux/actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  isAuthenticated,\n  login\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-3 m-2 shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  style: {\n                    fontFamily: \"Montserrat\"\n                  },\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"email\",\n                  className: \"mb-2\",\n                  value: email,\n                  name: \"email\",\n                  onChange: onChange,\n                  style: {\n                    borderBottomLeftRadius: \"0px\",\n                    borderBottomRightRadius: \"0px\",\n                    borderTopColor: \"transparent\",\n                    borderLeftColor: \"transparent\",\n                    borderRightColor: \"transparent\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"password\",\n                  style: {\n                    borderBottomLeftRadius: \"0px\",\n                    borderBottomRightRadius: \"0px\",\n                    borderTopColor: \"transparent\",\n                    borderLeftColor: \"transparent\",\n                    borderRightColor: \"transparent\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2 pt-2\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  type: \"submit\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-end pt-2\",\n              children: [\"Need an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                style: {\n                  textDecoration: \"none\",\n                  color: \"#c60000\"\n                },\n                children: \"Sign-up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"NANXdydkHAOjJOffs0JbaerJPf8=\");\n\n_c = Login;\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/auth/login.js"],"names":["React","Fragment","useState","Button","Card","Col","Form","Row","Link","Redirect","connect","PropTypes","login","Login","isAuthenticated","formData","setFormData","email","password","onChange","e","target","name","value","onSubmit","preventDefault","fontFamily","borderBottomLeftRadius","borderBottomRightRadius","borderTopColor","borderLeftColor","borderRightColor","textDecoration","color","propTypes","func","isRequired","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\n// redux\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../redux/actions/auth\";\n\nconst Login = ({ isAuthenticated, login }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <Row>\n          <Col>\n            <Card className=\"p-3 m-2 shadow-sm\">\n              <Form onSubmit={onSubmit}>\n                <Form.Group>\n                  <Form.Label style={{ fontFamily: \"Montserrat\" }}>\n                    Login\n                  </Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"email\"\n                    className=\"mb-2\"\n                    value={email}\n                    name=\"email\"\n                    onChange={onChange}\n                    style={{\n                      borderBottomLeftRadius: \"0px\",\n                      borderBottomRightRadius: \"0px\",\n                      borderTopColor: \"transparent\",\n                      borderLeftColor: \"transparent\",\n                      borderRightColor: \"transparent\",\n                    }}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"password\"\n                    style={{\n                      borderBottomLeftRadius: \"0px\",\n                      borderBottomRightRadius: \"0px\",\n                      borderTopColor: \"transparent\",\n                      borderLeftColor: \"transparent\",\n                      borderRightColor: \"transparent\",\n                    }}\n                  />\n                </Form.Group>\n                <div className=\"d-grid gap-2 pt-2\">\n                  <Button variant=\"danger\" type=\"submit\">Login</Button>\n                </div>\n              </Form>\n              <small className=\"text-end pt-2\">\n                Need an account?{\" \"}\n                <Link\n                  to=\"/signup\"\n                  style={{ textDecoration: \"none\", color: \"#c60000\" }}\n                >\n                  Sign-up\n                </Link>\n              </small>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n"]},"metadata":{},"sourceType":"module"}