{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_JOURNAL, //   GET_JOURNAL,\nGET_JOURNALS, //   UPDATE_JOURNAL,\nERROR_JOURNAL, //   DELETE_JOURNAL,\nUPDATE_LIKES } from \"../actions/types\";\nimport { setAlert } from \"./alert\"; // get journals\n\nexport const getJournals = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/journal\");\n    dispatch({\n      type: GET_JOURNALS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR_JOURNAL,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add journals\n\nexport const addJournal = payload => async dispatch => {\n  try {\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const res = await axios.post(\"/api/journal\", payload, config);\n    dispatch({\n      type: ADD_JOURNAL,\n      payload: res.data\n    });\n    dispatch(setAlert(\"A new Journal was added!\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: ERROR_JOURNAL,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/journal/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR_JOURNAL,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/journal/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR_JOURNAL,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/redux/actions/journal.js"],"names":["axios","ADD_JOURNAL","GET_JOURNALS","ERROR_JOURNAL","UPDATE_LIKES","setAlert","getJournals","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addJournal","config","header","post","addLike","id","put","likes","removeLike"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  ADD_JOURNAL,\n  //   GET_JOURNAL,\n  GET_JOURNALS,\n  //   UPDATE_JOURNAL,\n  ERROR_JOURNAL,\n  //   DELETE_JOURNAL,\n  UPDATE_LIKES\n} from \"../actions/types\";\nimport { setAlert } from \"./alert\";\n\n// get journals\nexport const getJournals = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/journal\");\n    dispatch({\n      type: GET_JOURNALS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR_JOURNAL,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// add journals\nexport const addJournal = (payload) => async (dispatch) => {\n  try {\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    const res = await axios.post(\"/api/journal\", payload, config);\n    dispatch({\n      type: ADD_JOURNAL,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"A new Journal was added!\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: ERROR_JOURNAL,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n\n// Add like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/journal/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR_JOURNAL,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/journal/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: ERROR_JOURNAL,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}