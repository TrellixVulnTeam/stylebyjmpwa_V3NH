{"ast":null,"code":"import { ADD_JOURNAL, GET_JOURNAL, GET_JOURNALS, UPDATE_JOURNAL, ERROR_JOURNAL, DELETE_JOURNAL, UPDATE_LIKES } from \"../actions/types\";\nconst initialState = {\n  journals: [],\n  journal: null,\n  loading: true,\n  error: {}\n};\n\nfunction journalReducer(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_JOURNALS:\n      return { ...state,\n        journals: payload,\n        loading: false\n      };\n\n    case GET_JOURNAL:\n    case UPDATE_JOURNAL:\n      return { ...state,\n        journal: payload,\n        loading: false\n      };\n\n    case ADD_JOURNAL:\n      return { ...state,\n        journals: [payload, ...state.journals]\n      };\n\n    case DELETE_JOURNAL:\n      return { ...state,\n        journal: state.journal.filter(journal => journal.id !== payload),\n        loading: false\n      };\n\n    case ERROR_JOURNAL:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default journalReducer;","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/redux/reducers/journal.js"],"names":["ADD_JOURNAL","GET_JOURNAL","GET_JOURNALS","UPDATE_JOURNAL","ERROR_JOURNAL","DELETE_JOURNAL","UPDATE_LIKES","initialState","journals","journal","loading","error","journalReducer","state","action","type","payload","filter","id"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,YAPF,QAQO,kBARP;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,SAASC,cAAT,CAAwBC,KAAK,GAAGN,YAAhC,EAA8CO,MAA9C,EAAsD;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKb,YAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,QAAQ,EAAEQ,OAFL;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,WAAL;AACA,SAAKE,cAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,OAAO,EAAEO,OAFJ;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,QAAQ,EAAE,CAACQ,OAAD,EAAU,GAAGH,KAAK,CAACL,QAAnB;AAFL,OAAP;;AAIF,SAAKH,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,CAAcQ,MAAd,CAAsBR,OAAD,IAAaA,OAAO,CAACS,EAAR,KAAeF,OAAjD,CAFJ;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,aAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,KAAK,EAAEK,OAFF;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF;AACE,aAAOG,KAAP;AAjCJ;AAmCD;;AAED,eAAeD,cAAf","sourcesContent":["import {\n  ADD_JOURNAL,\n  GET_JOURNAL,\n  GET_JOURNALS,\n  UPDATE_JOURNAL,\n  ERROR_JOURNAL,\n  DELETE_JOURNAL,\n  UPDATE_LIKES,\n} from \"../actions/types\";\n\nconst initialState = {\n  journals: [],\n  journal: null,\n  loading: true,\n  error: {},\n};\n\nfunction journalReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_JOURNALS:\n      return {\n        ...state,\n        journals: payload,\n        loading: false,\n      };\n    case GET_JOURNAL:\n    case UPDATE_JOURNAL:\n      return {\n        ...state,\n        journal: payload,\n        loading: false,\n      };\n    case ADD_JOURNAL:\n      return {\n        ...state,\n        journals: [payload, ...state.journals],\n      };\n    case DELETE_JOURNAL:\n      return {\n        ...state,\n        journal: state.journal.filter((journal) => journal.id !== payload),\n        loading: false,\n      };\n    case ERROR_JOURNAL:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default journalReducer;\n"]},"metadata":{},"sourceType":"module"}