{"ast":null,"code":"var _jsxFileName = \"/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/auth/register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\"; //redux\n\nimport { setAlert } from \"../../redux/actions/alert\";\nimport { register } from \"../../redux/actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  isAuthenticated,\n  setAlert,\n  register\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-3 m-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  style: {\n                    fontFamily: \"Montserrat\"\n                  },\n                  children: \"Sign-up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  style: {\n                    borderBottomLeftRadius: \"0px\",\n                    borderBottomRightRadius: \"0px\"\n                  },\n                  type: \"text\",\n                  placeholder: \"full name\",\n                  className: \"mb-2\",\n                  onChange: onChange,\n                  value: name,\n                  name: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"fullname@anemail.com\",\n                  className: \"mb-2\",\n                  onChange: onChange,\n                  value: email,\n                  name: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"password\",\n                  className: \"mb-2\",\n                  onChange: onChange,\n                  value: password,\n                  name: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"confirm password\",\n                  onChange: onChange,\n                  value: password2,\n                  name: \"password2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2 pt-2\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  type: \"submit\",\n                  value: \"SignUp\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-end pt-2\",\n              children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                style: {\n                  textDecoration: \"none\",\n                  color: \"#c60000\"\n                },\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"If57yD4JzonUKgYlkCtBxEM/sxI=\");\n\n_c = SignUp;\nSignUp.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProp = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProp, {\n  setAlert,\n  register\n})(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/auth/register.js"],"names":["React","Fragment","useState","Button","Card","Col","Form","Row","Link","Redirect","setAlert","register","PropTypes","connect","SignUp","isAuthenticated","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","fontFamily","borderBottomLeftRadius","borderBottomRightRadius","textDecoration","color","propTypes","func","isRequired","bool","mapStateToProp","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\n//redux\nimport { setAlert } from \"../../redux/actions/alert\";\nimport { register } from \"../../redux/actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = ({ isAuthenticated, setAlert, register }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <Row>\n          <Col>\n            <Card className=\"p-3 m-2\">\n              <Form onSubmit={onSubmit}>\n                <Form.Group>\n                  <Form.Label style={{ fontFamily: \"Montserrat\" }}>\n                    Sign-up\n                  </Form.Label>\n                  <Form.Control\n                    style={{\n                      borderBottomLeftRadius: \"0px\",\n                      borderBottomRightRadius: \"0px\",\n                      \n                    }}\n                    type=\"text\"\n                    placeholder=\"full name\"\n                    className=\"mb-2\"\n                    onChange={onChange}\n                    value={name}\n                    name=\"name\"\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"fullname@anemail.com\"\n                    className=\"mb-2\"\n                    onChange={onChange}\n                    value={email}\n                    name=\"email\"\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"password\"\n                    className=\"mb-2\"\n                    onChange={onChange}\n                    value={password}\n                    name=\"password\"\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"confirm password\"\n                    onChange={onChange}\n                    value={password2}\n                    name=\"password2\"\n                  />\n                </Form.Group>\n                <div className=\"d-grid gap-2 pt-2\">\n                  <Button variant=\"danger\" type=\"submit\" value=\"SignUp\">\n                    Login\n                  </Button>\n                </div>\n              </Form>\n              <small className=\"text-end pt-2\">\n                Already have an account?{\" \"}\n                <Link\n                  to=\"/login\"\n                  style={{ textDecoration: \"none\", color: \"#c60000\" }}\n                >\n                  Login\n                </Link>\n              </small>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </Fragment>\n  );\n};\n\nSignUp.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProp = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProp, { setAlert, register })(SignUp);\n"]},"metadata":{},"sourceType":"module"}