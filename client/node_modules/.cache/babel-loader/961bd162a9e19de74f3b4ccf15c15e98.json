{"ast":null,"code":"var _jsxFileName = \"/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/userAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\"; // import { db } from \"../firebase/config\";\n\nimport { useAuth } from \"../firebase/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserAccount = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [addressTwo, setAddressTwo] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [loader, setLoader] = useState(\"\"); // eslint-disable-next-line\n\n  const [users, setUsers] = useState([]);\n\n  const handleUserSumbit = e => {\n    e.preventDefault();\n    setLoader(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 1,\n        lg: 1,\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserAccount, \"3DSQ17444ONZxdwOjuYRjwSsNLc=\");\n\n_c = UserAccount;\nexport default UserAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAccount\");","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/userAccount.js"],"names":["React","useState","useEffect","Container","Row","Col","Form","Button","useAuth","UserAccount","email","setEmail","password","setPassword","displayName","setDisplayName","address","setAddress","addressTwo","setAddressTwo","city","setCity","state","setState","zip","setZip","loader","setLoader","users","setUsers","handleUserSumbit","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,iBAAlD,C,CAEA;;AACA,SAASC,OAAT,QAAwB,qBAAxB;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuB,GAAD,EAAMC,MAAN,IAAgBxB,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,EAAD,CAApC,CAVwB,CAYxB;;AACA,QAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAM6B,gBAAgB,GAAIC,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,+BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA8KD,CAlMD;;GAAMlB,W;;KAAAA,W;AAoMN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\n\n// import { db } from \"../firebase/config\";\nimport { useAuth } from \"../firebase/context\";\n\nconst UserAccount = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [addressTwo, setAddressTwo] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n\n  const [loader, setLoader] = useState(\"\");\n  \n  // eslint-disable-next-line\n  const [users, setUsers] = useState([]);\n\n  const handleUserSumbit = (e) => {\n    e.preventDefault();\n    setLoader(true);\n  };\n\n  return (\n    <>\n      <Container>\n        <Row xs={1} md={1} lg={1}>\n          <Col>\n            {/* {!currentUser && <h5>User Profile</h5>}\n            <Form onSubmit={handleUserSumbit}>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Full Name</Form.Label>\n                  <Form.Control\n                    value={displayName}\n                    onChange={(e) => setDisplayName(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"First & Last\"\n                    required\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    type=\"email\"\n                    required\n                    placeholder=\"Enter email\"\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    type=\"password\"\n                    required\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Group controlId=\"formGridAddress1\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  value={address}\n                  onChange={(e) => setAddress(e.target.value)}\n                  placeholder=\"1234 Main St\"\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formGridAddress2\">\n                <Form.Label>Address 2</Form.Label>\n                <Form.Control\n                  value={addressTwo}\n                  onChange={(e) => setAddressTwo(e.target.value)}\n                  placeholder=\"Apartment, studio, or floor #\"\n                />\n              </Form.Group>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    placeholder=\"San Antonio\"\n                    required\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                    as=\"select\"\n                    defaultValue=\"Choose...\"\n                    required\n                  >\n                    <option>Choose...</option>\n                    <option>TX</option>\n                    <option>CA</option>\n                    <option>FL</option>\n                    <option>NY</option>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                  <Form.Label>Zip</Form.Label>\n                  <Form.Control\n                    value={zip}\n                    onChange={(e) => setZip(e.target.value)}\n                    placeholder=\"78205\"\n                    required\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Group id=\"formGridCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Billing & Shipping\" />\n              </Form.Group>\n\n              <Button\n                style={{\n                  backgroundColor: loader ? \"rgba(2,2,0)\" : \"transparent\",\n                  borderColor: \"transparent\",\n                  color: \"red\",\n                }}\n                block\n                variant=\"primary\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n      <Container className=\"pt-5\">\n        <Row>\n          <Col>\n            <h5>Payment Information</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Form>\n              <Form.Group>\n                <Form.Label>Name on card</Form.Label>\n                <Form.Control placeholder=\"Jon Doe\" required />\n              </Form.Group>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label>Card Number</Form.Label>\n                  <Form.Control placeholder=\"4242 4242 4242 4242\" required />\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label>Zip Code</Form.Label>\n                  <Form.Control required />\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Expiration Date</Form.Label>\n                  <Form.Control type=\"number\" placeholder=\"12/25\" required />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"number\" placeholder=\"CVV\" required />\n                </Form.Group>\n              </Form.Row>\n              <Button\n                style={{\n                  backgroundColor: loader ? \"rgba(2,2,0)\" : \"transparent\",\n                  borderColor: \"transparent\",\n                  color: \"red\",\n                }}\n                block\n                variant=\"primary\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </Form> */}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default UserAccount;\n"]},"metadata":{},"sourceType":"module"}