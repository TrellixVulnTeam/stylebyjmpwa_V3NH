{"ast":null,"code":"var _jsxFileName = \"/Users/jon-michaelnarvaez/stylebyjmsa/client/src/components/stripe-button/stripe-button-component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"process.env.REACT_APP_PUBLIC_STRIPE_KEY\");\nconst checkoutButton = document.getElementById(\"checkout-button\");\ncheckoutButton.addEventListener(\"click\", function () {\n  fetch(\"/create-checkout-session\", {\n    method: \"POST\"\n  }).then(function (response) {\n    return response.json();\n  }).then(function (session) {\n    return stripePromise.redirectToCheckout({\n      sessionId: session.id\n    });\n  }).then(function (result) {\n    // If redirectToCheckout fails due to a browser or network\n    // error, you should display the localized error message to your\n    // customer using error.message.\n    if (result.error) {\n      alert(result.error.message);\n    }\n  }).catch(function (error) {\n    console.error(\"Error:\", error);\n  });\n});\n\nconst ProductDisplay = ({\n  handleClick\n}) => /*#__PURE__*/_jsxDEV(\"section\", {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://i.imgur.com/EHyR2nP.png\",\n      alt: \"The cover of Stubborn Attachments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Developers Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"$280.00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    id: \"checkout-button\",\n    role: \"link\",\n    onClick: handleClick,\n    className: \"btn btn-dark\",\n    children: \"Checkout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\n\n_c = ProductDisplay;\n\nconst Message = ({\n  message\n}) => /*#__PURE__*/_jsxDEV(\"section\", {\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 3\n}, this);\n\n_c2 = Message;\nexport default function StripeCheckoutButton() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    // Check to see if this is a redirect back from Checkout\n    const query = new URLSearchParams(window.location.search);\n\n    if (query.get(\"success\")) {\n      setMessage(\"Order placed! You will receive an email confirmation.\");\n    }\n\n    if (query.get(\"canceled\")) {\n      setMessage(\"Order canceled -- continue to shop around and checkout when you're ready.\");\n    }\n  }, []);\n\n  const handleClick = async event => {\n    const stripe = await stripePromise;\n    const response = await fetch(\"/create-checkout-session\", {\n      method: \"POST\"\n    });\n    const session = await response.json(); // When the customer clicks on the button, redirect them to Checkout.\n\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n\n    if (result.error) {}\n  };\n\n  return message ? /*#__PURE__*/_jsxDEV(Message, {\n    message: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(ProductDisplay, {\n    handleClick: handleClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StripeCheckoutButton, \"ClLa+zvPL6vd0LAuHSvav3BaFBg=\");\n\n_c3 = StripeCheckoutButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProductDisplay\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"StripeCheckoutButton\");","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/components/stripe-button/stripe-button-component.jsx"],"names":["React","useState","useEffect","loadStripe","stripePromise","checkoutButton","document","getElementById","addEventListener","fetch","method","then","response","json","session","redirectToCheckout","sessionId","id","result","error","alert","message","catch","console","ProductDisplay","handleClick","Message","StripeCheckoutButton","setMessage","query","URLSearchParams","window","location","search","get","event","stripe"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst stripePromise = loadStripe(\"process.env.REACT_APP_PUBLIC_STRIPE_KEY\");\nconst checkoutButton = document.getElementById(\"checkout-button\");\n\ncheckoutButton.addEventListener(\"click\", function () {\n  fetch(\"/create-checkout-session\", {\n    method: \"POST\",\n  })\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (session) {\n      return stripePromise.redirectToCheckout({ sessionId: session.id });\n    })\n    .then(function (result) {\n      // If redirectToCheckout fails due to a browser or network\n      // error, you should display the localized error message to your\n      // customer using error.message.\n      if (result.error) {\n        alert(result.error.message);\n      }\n    })\n    .catch(function (error) {\n      console.error(\"Error:\", error);\n    });\n});\n\nconst ProductDisplay = ({ handleClick }) => (\n  <section>\n    <div className=\"product\">\n      <img\n        src=\"https://i.imgur.com/EHyR2nP.png\"\n        alt=\"The cover of Stubborn Attachments\"\n      />\n      <div className=\"description\">\n        <h3>Developers Test</h3>\n        <h5>$280.00</h5>\n      </div>\n    </div>\n    <button\n      type=\"button\"\n      id=\"checkout-button\"\n      role=\"link\"\n      onClick={handleClick}\n      className=\"btn btn-dark\"\n    >\n      Checkout\n    </button>\n  </section>\n);\nconst Message = ({ message }) => (\n  <section>\n    <p>{message}</p>\n  </section>\n);\nexport default function StripeCheckoutButton() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    // Check to see if this is a redirect back from Checkout\n    const query = new URLSearchParams(window.location.search);\n    if (query.get(\"success\")) {\n      setMessage(\"Order placed! You will receive an email confirmation.\");\n    }\n    if (query.get(\"canceled\")) {\n      setMessage(\n        \"Order canceled -- continue to shop around and checkout when you're ready.\"\n      );\n    }\n  }, []);\n\n  const handleClick = async (event) => {\n    const stripe = await stripePromise;\n    const response = await fetch(\"/create-checkout-session\", {\n      method: \"POST\",\n    });\n    const session = await response.json();\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n    if (result.error) {\n    }\n  };\n\n  return message ? (\n    <Message message={message} />\n  ) : (\n    <ProductDisplay handleClick={handleClick} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}