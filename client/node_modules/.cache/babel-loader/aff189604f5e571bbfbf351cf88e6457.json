{"ast":null,"code":"// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth';\n// import 'firebase/performance'; \n// import \"firebase/analytics\";\n// const config = {\n//     apiKey: process.env.REACT_APP_API_KEY,\n//     authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//     projectId: process.env.REACT_APP_PROJECT_ID,\n//     storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n//     messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\n//     appId: process.env.REACT_APP_APP_ID,\n//     measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n// };\n// firebase.initializeApp(config);\n// export const createUserProfileDocument = async (userAuth, additionalData) => {\n//   if (!userAuth) return;\n//   const userRef = firestore.doc(`users/${userAuth.uid}`);\n//   const snapShot = await userRef.get();\n//   if (!snapShot.exists) {\n//     const { displayName, email } = userAuth;\n//     const createdAt = new Date();\n//     try {\n//       await userRef.set({\n//         displayName,\n//         email,\n//         createdAt,\n//         ...additionalData\n//       });\n//     } catch (error) {\n//       console.log('error creating user', error.message);\n//     }\n//   }\n//   return userRef;\n// };\n// export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n//  export const perf = firebase.performance();\n//  export const analytics = firebase.analytics().logEvent(\"notification_received\");\n// const provider = new firebase.auth.GoogleAuthProvider();\n// provider.setCustomParameters({ prompt: 'select_account' });\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\n// export default firebase;","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/firebase/firebase.utils.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth';\n// import 'firebase/performance'; \n// import \"firebase/analytics\";\n\n// const config = {\n//     apiKey: process.env.REACT_APP_API_KEY,\n//     authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//     projectId: process.env.REACT_APP_PROJECT_ID,\n//     storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n//     messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\n//     appId: process.env.REACT_APP_APP_ID,\n//     measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n// };\n\n// firebase.initializeApp(config);\n\n// export const createUserProfileDocument = async (userAuth, additionalData) => {\n//   if (!userAuth) return;\n\n//   const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n//   const snapShot = await userRef.get();\n\n//   if (!snapShot.exists) {\n//     const { displayName, email } = userAuth;\n//     const createdAt = new Date();\n//     try {\n//       await userRef.set({\n//         displayName,\n//         email,\n//         createdAt,\n//         ...additionalData\n//       });\n//     } catch (error) {\n//       console.log('error creating user', error.message);\n//     }\n//   }\n\n//   return userRef;\n// };\n\n// export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n//  export const perf = firebase.performance();\n//  export const analytics = firebase.analytics().logEvent(\"notification_received\");\n\n// const provider = new firebase.auth.GoogleAuthProvider();\n// provider.setCustomParameters({ prompt: 'select_account' });\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n// export default firebase;\n"]},"metadata":{},"sourceType":"module"}