{"ast":null,"code":"import _toConsumableArray from\"/Users/jon-michaelnarvaez/stylebyjmsa/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/jon-michaelnarvaez/stylebyjmsa/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var addItemToCart=function addItemToCart(cartItems,cartItemToAdd){var existingCartItem=cartItems.find(function(cartItem){return cartItem.id===cartItemToAdd.id;});if(existingCartItem){return cartItems.map(function(cartItem){return cartItem.id===cartItemToAdd.id?_objectSpread(_objectSpread({},cartItem),{},{quantity:cartItem.quantity+1}):cartItem;});}return[].concat(_toConsumableArray(cartItems),[_objectSpread(_objectSpread({},cartItemToAdd),{},{quantity:1})]);};export var removeItemFromCart=function removeItemFromCart(cartItems,cartItemToRemove){var existingCartItem=cartItems.find(function(cartItem){return cartItem.id===cartItemToRemove.id;});if(existingCartItem.quantity===1){return cartItems.filter(function(cartItem){return cartItem.id!==cartItemToRemove.id;});}return cartItems.map(function(cartItem){return cartItem.id===cartItemToRemove.id?_objectSpread(_objectSpread({},cartItem),{},{quantity:cartItem.quantity-1}):cartItem;});};export var filterItemFromCart=function filterItemFromCart(cartItems,item){return cartItems.filter(function(cartItem){return cartItem.id!==item.id;});};export var getCartItemsCount=function getCartItemsCount(cartItems){return cartItems.reduce(function(accumalatedQuantity,cartItem){return accumalatedQuantity+cartItem.quantity;},0);};export var getCartTotal=function getCartTotal(cartItems){return cartItems.reduce(function(accumalatedQuantity,cartItem){return accumalatedQuantity+cartItem.quantity*cartItem.price;},0);};","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/providers/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter","filterItemFromCart","item","getCartItemsCount","reduce","accumalatedQuantity","getCartTotal","price"],"mappings":"6UAAA,MAAO,IAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,SAAD,CAAYC,aAAZ,CAA8B,CACzD,GAAMC,CAAAA,gBAAgB,CAAGF,SAAS,CAACG,IAAV,CACvB,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,GAAgBJ,aAAa,CAACI,EAA5C,EADuB,CAAzB,CAIA,GAAIH,gBAAJ,CAAsB,CACpB,MAAOF,CAAAA,SAAS,CAACM,GAAV,CAAc,SAACF,QAAD,QACnBA,CAAAA,QAAQ,CAACC,EAAT,GAAgBJ,aAAa,CAACI,EAA9B,gCACSD,QADT,MACmBG,QAAQ,CAAEH,QAAQ,CAACG,QAAT,CAAoB,CADjD,GAEIH,QAHe,EAAd,CAAP,CAKD,CAED,mCAAWJ,SAAX,kCAA2BC,aAA3B,MAA0CM,QAAQ,CAAE,CAApD,KACD,CAdM,CAgBP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACR,SAAD,CAAYS,gBAAZ,CAAiC,CACjE,GAAMP,CAAAA,gBAAgB,CAAGF,SAAS,CAACG,IAAV,CACvB,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,GAAgBI,gBAAgB,CAACJ,EAA/C,EADuB,CAAzB,CAIA,GAAIH,gBAAgB,CAACK,QAAjB,GAA8B,CAAlC,CAAqC,CACnC,MAAOP,CAAAA,SAAS,CAACU,MAAV,CAAiB,SAACN,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,GAAgBI,gBAAgB,CAACJ,EAA/C,EAAjB,CAAP,CACD,CAED,MAAOL,CAAAA,SAAS,CAACM,GAAV,CAAc,SAACF,QAAD,QACnBA,CAAAA,QAAQ,CAACC,EAAT,GAAgBI,gBAAgB,CAACJ,EAAjC,gCACSD,QADT,MACmBG,QAAQ,CAAEH,QAAQ,CAACG,QAAT,CAAoB,CADjD,GAEIH,QAHe,EAAd,CAAP,CAKD,CAdM,CAgBP,MAAO,IAAMO,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACX,SAAD,CAAYY,IAAZ,QAChCZ,CAAAA,SAAS,CAACU,MAAV,CAAiB,SAACN,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,GAAgBO,IAAI,CAACP,EAAnC,EAAjB,CADgC,EAA3B,CAGP,MAAO,IAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACb,SAAD,QAC/BA,CAAAA,SAAS,CAACc,MAAV,CACE,SAACC,mBAAD,CAAsBX,QAAtB,QAAmCW,CAAAA,mBAAmB,CAAGX,QAAQ,CAACG,QAAlE,EADF,CAEE,CAFF,CAD+B,EAA1B,CAMP,MAAO,IAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAChB,SAAD,QAC1BA,CAAAA,SAAS,CAACc,MAAV,CACE,SAACC,mBAAD,CAAsBX,QAAtB,QACEW,CAAAA,mBAAmB,CAAGX,QAAQ,CAACG,QAAT,CAAoBH,QAAQ,CAACa,KADrD,EADF,CAGE,CAHF,CAD0B,EAArB","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nexport const filterItemFromCart = (cartItems, item) =>\n  cartItems.filter((cartItem) => cartItem.id !== item.id);\n\nexport const getCartItemsCount = (cartItems) =>\n  cartItems.reduce(\n    (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity,\n    0\n  );\n\nexport const getCartTotal = (cartItems) =>\n  cartItems.reduce(\n    (accumalatedQuantity, cartItem) =>\n      accumalatedQuantity + cartItem.quantity * cartItem.price,\n    0\n  );\n"]},"metadata":{},"sourceType":"module"}