{"ast":null,"code":"var _jsxFileName = \"/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/checkout/checkout.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\"; // import CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\n// import StripeCheckoutButton from \"../../components/stripe-button/stripe-button-component\";\n// import { CartContext } from \"../../providers/cart/cart.provider\";\n\nimport \"./checkout.styles.scss\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst ProductDisplay = ({\n  handleClick\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n_c = ProductDisplay;\n\nconst Message = ({\n  message\n}) => /*#__PURE__*/_jsxDEV(\"section\", {\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\n_c2 = Message;\nexport default function CheckoutPage() {\n  _s();\n\n  // const { cartItems, cartTotal } = useContext(CartContext);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    // Check to see if this is a redirect back from Checkout\n    const query = new URLSearchParams(window.location.search);\n\n    if (query.get(\"success\")) {\n      setMessage(\"Order placed! You will receive an email confirmation.\");\n    }\n\n    if (query.get(\"canceled\")) {\n      setMessage(\"Order canceled -- continue to shop around and checkout when you're ready.\");\n    }\n  }, []);\n\n  const handleClick = async e => {\n    e.preventDefault();\n    const stripe = await stripePromise; // Call your backend to create the Checkout Session\n\n    const response = await fetch(\"http://localhost:5000/create-checkout-session\", {\n      method: \"POST\"\n    });\n    const session = await response.json(); // When the customer clicks on the button, redirect them to Checkout.\n\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n\n    if (result.error) {// If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    }\n  };\n\n  return message ? /*#__PURE__*/_jsxDEV(Message, {\n    message: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(ProductDisplay, {\n    handleClick: handleClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutPage, \"ClLa+zvPL6vd0LAuHSvav3BaFBg=\");\n\n_c3 = CheckoutPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProductDisplay\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"CheckoutPage\");","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/checkout/checkout.component.jsx"],"names":["React","useEffect","useState","loadStripe","stripePromise","process","env","REACT_APP_STRIPE_PUBLIC_KEY","ProductDisplay","handleClick","Message","message","CheckoutPage","setMessage","query","URLSearchParams","window","location","search","get","e","preventDefault","stripe","response","fetch","method","session","json","result","redirectToCheckout","sessionId","id","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;AACA;AACA;;AACA,OAAO,wBAAP;;;AAEA,MAAMC,aAAa,GAAGD,UAAU,CAACE,OAAO,CAACC,GAAR,CAAYC,2BAAb,CAAhC;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACtB,qCADD;;KAAMD,c;;AAKN,MAAME,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACd;AAAA,yBACE;AAAA,cAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMD,O;AAMN,eAAe,SAASE,YAAT,GAAwB;AAAA;;AACrC;AACA,QAAM,CAACD,OAAD,EAAUE,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMa,KAAK,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAd;;AACA,QAAIJ,KAAK,CAACK,GAAN,CAAU,SAAV,CAAJ,EAA0B;AACxBN,MAAAA,UAAU,CAAC,uDAAD,CAAV;AACD;;AACD,QAAIC,KAAK,CAACK,GAAN,CAAU,UAAV,CAAJ,EAA2B;AACzBN,MAAAA,UAAU,CACR,2EADQ,CAAV;AAGD;AACF,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMJ,WAAW,GAAG,MAAOW,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAG,MAAMlB,aAArB,CAF+B,CAI/B;;AACA,UAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,EAE1B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAF0B,CAA5B;AAKA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAtB,CAV+B,CAY/B;;AACA,UAAMC,MAAM,GAAG,MAAMN,MAAM,CAACO,kBAAP,CAA0B;AAC7CC,MAAAA,SAAS,EAAEJ,OAAO,CAACK;AAD0B,KAA1B,CAArB;;AAIA,QAAIH,MAAM,CAACI,KAAX,EAAkB,CAChB;AACA;AACA;AACD;AACF,GAtBD;;AAwBA,SAAOrB,OAAO,gBACZ,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,UADY,gBAGZ,QAAC,cAAD;AAAgB,IAAA,WAAW,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD;;GA9CuBG,Y;;MAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n// import CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\n// import StripeCheckoutButton from \"../../components/stripe-button/stripe-button-component\";\n// import { CartContext } from \"../../providers/cart/cart.provider\";\nimport \"./checkout.styles.scss\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst ProductDisplay = ({ handleClick }) => (\n <>\n </>\n);\n\nconst Message = ({ message }) => (\n  <section>\n    <p>{message}</p>\n  </section>\n);\n\nexport default function CheckoutPage() {\n  // const { cartItems, cartTotal } = useContext(CartContext);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    // Check to see if this is a redirect back from Checkout\n    const query = new URLSearchParams(window.location.search);\n    if (query.get(\"success\")) {\n      setMessage(\"Order placed! You will receive an email confirmation.\");\n    }\n    if (query.get(\"canceled\")) {\n      setMessage(\n        \"Order canceled -- continue to shop around and checkout when you're ready.\"\n      );\n    }\n  }, []);\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    const stripe = await stripePromise;\n\n    // Call your backend to create the Checkout Session\n    const response = await fetch(\n      \"http://localhost:5000/create-checkout-session\",\n      { method: \"POST\" }\n    );\n\n    const session = await response.json();\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    }\n  };\n\n  return message ? (\n    <Message message={message} />\n  ) : (\n    <ProductDisplay handleClick={handleClick} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}