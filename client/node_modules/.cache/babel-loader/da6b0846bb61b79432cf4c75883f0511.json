{"ast":null,"code":"var _jsxFileName = \"/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/checkout/checkout.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\n// import StripeCheckoutButton from \"../../components/stripe-button/stripe-button-component\";\n// import { CartContext } from \"../../providers/cart/cart.provider\";\n\nimport \"./checkout.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductDisplay = ({\n  handleClick\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.imgur.com/EHyR2nP.png\",\n        alt: \"The cover of Stubborn Attachments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Stubborn Attachments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"$280.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        type: \"button\",\n        id: \"checkout-button\",\n        role: \"link\",\n        onClick: handleClick,\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false);\n\n_c = ProductDisplay;\n\nconst Message = ({\n  message\n}) => /*#__PURE__*/_jsxDEV(\"section\", {\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this);\n\n_c2 = Message;\nexport default function CheckoutPage() {\n  _s();\n\n  // const { cartItems, cartTotal } = useContext(CartContext);\n  const [message, setMessage] = useState(\"\");\n  return message ? /*#__PURE__*/_jsxDEV(Message, {\n    message: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(ProductDisplay, {\n    handleClick: handleClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n} // }\n// import React, { useEffect, useState } from \"react\";\n// import { loadStripe } from \"@stripe/stripe-js\";\n// import axios from \"axios\";\n// export default function CheckoutPage() {\n//   const [message, setMessage] = useState(\"\");\n//   const size = useWindowSize();\n//   const stripePromise = loadStripe(\"process.env.REACT_APP_STRIPE_PUBLIC_KEY\");\n//   function useWindowSize() {\n//     // Initialize state with undefined width/height so server and client renders match\n//     // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n//     const [windowSize, setWindowSize] = useState({\n//       width: undefined,\n//       height: undefined,\n//     });\n//     useEffect(() => {\n//       // Handler to call on window resize\n//       function handleResize() {\n//         // Set window width/height to state\n//         setWindowSize({\n//           width: window.innerWidth,\n//           height: window.innerHeight,\n//         });\n//       }\n//       // Add event listener\n//       window.addEventListener(\"resize\", handleResize);\n//       // Call handler right away so state gets updated with initial window size\n//       handleResize();\n//       // Remove event listener on cleanup\n//       return () => window.removeEventListener(\"resize\", handleResize);\n//     }, []); // Empty array ensures that effect is only run on mount\n//     return windowSize;\n//   }\n//   const handleClick = async (e) => {\n//     e.preventDefault();\n//     const stripe = stripePromise;\n//     async function getData() {\n//       await axios(\"http://localhost:5000/create-checkout-session\", {\n//         method: \"POST\",\n//       })\n//         .then(function (response) {\n//           return response.json();\n//         })\n//         .then(function (session) {\n//           return stripe.redirectToCheckout({ sessionId: session.id });\n//         })\n//         .then(function (result) {\n//           // If `redirectToCheckout` fails due to a browser or network\n//           // error, you should display the localized error message to your\n//           // customer using `error.message`.\n//           if (result.error) {\n//             alert(result.error.message);\n//           }\n//         });\n//     }\n//   };\n//   const Message = () => {\n//     <section>\n//       <p>{message}</p>\n//     </section>;\n//   };\n//   useEffect(() => {\n//     // Check to see if this is a redirect back from Checkout\n//     const query = new URLSearchParams(window.location.search);\n//     if (query.get(\"success\")) {\n//       setMessage(\"Order placed! You will receive an email confirmation.\");\n//     }\n//     if (query.get(\"canceled\")) {\n//       setMessage(\n//         \"Order canceled -- continue to shop around and checkout when you're ready.\"\n//       );\n//     }\n//   }, []);\n//   return (\n//     <div className=\"container\">\n//       <div className=\"product\">\n//         <div>\n//           {size.width}px / {size.height}px\n//         </div>\n//         <img\n//           src=\"https://i.imgur.com/EHyR2nP.png\"\n//           alt=\"The cover of Stubborn Attachments\"\n//         />\n//         <div className=\"description\">\n//           <h3>Dev Test</h3>\n//           <h5>$280.00</h5>\n//         </div>\n//       </div>\n//       <div>\n//         <button\n//           className=\"btn btn-dark\"\n//           type=\"button\"\n//           id=\"checkout-button\"\n//           role=\"link\"\n//           onClick={handleClick}\n//         >\n//           Checkout\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n_s(CheckoutPage, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n\n_c3 = CheckoutPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProductDisplay\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"CheckoutPage\");","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/pages/checkout/checkout.component.jsx"],"names":["React","useEffect","useState","ProductDisplay","handleClick","Message","message","CheckoutPage","setMessage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;AACA;AACA;;AACA,OAAO,wBAAP;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACrB;AAAA,yBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AACE,QAAA,GAAG,EAAC,iCADN;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,EAAE,EAAC,iBAHL;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,OAAO,EAAEA,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,iBADF;;KAAMD,c;;AA4BN,MAAME,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACd;AAAA,yBACE;AAAA,cAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMD,O;AAMN,eAAe,SAASE,YAAT,GAAwB;AAAA;;AACrC;AACA,QAAM,CAACD,OAAD,EAAUE,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEA,SAAOI,OAAO,gBACZ,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,UADY,gBAGZ,QAAC,cAAD;AAAgB,IAAA,WAAW,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,C,CACD;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAnHwBG,Y;;MAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// import CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\n// import StripeCheckoutButton from \"../../components/stripe-button/stripe-button-component\";\n// import { CartContext } from \"../../providers/cart/cart.provider\";\nimport \"./checkout.styles.scss\";\n\nconst ProductDisplay = ({ handleClick }) => (\n  <>\n    <div className=\"container\">\n      <div className=\"product\">\n        <img\n          src=\"https://i.imgur.com/EHyR2nP.png\"\n          alt=\"The cover of Stubborn Attachments\"\n        />\n        <div className=\"description\">\n          <h3>Stubborn Attachments</h3>\n          <h5>$280.00</h5>\n        </div>\n      </div>\n      <div>\n        <button\n          className=\"btn btn-dark\"\n          type=\"button\"\n          id=\"checkout-button\"\n          role=\"link\"\n          onClick={handleClick}\n        >\n          Checkout\n        </button>\n      </div>\n    </div>\n  </>\n);\n\nconst Message = ({ message }) => (\n  <section>\n    <p>{message}</p>\n  </section>\n);\n\nexport default function CheckoutPage() {\n  // const { cartItems, cartTotal } = useContext(CartContext);\n  const [message, setMessage] = useState(\"\");\n\n  return message ? (\n    <Message message={message} />\n  ) : (\n    <ProductDisplay handleClick={handleClick} />\n  );\n}\n// }\n\n// import React, { useEffect, useState } from \"react\";\n// import { loadStripe } from \"@stripe/stripe-js\";\n// import axios from \"axios\";\n\n// export default function CheckoutPage() {\n//   const [message, setMessage] = useState(\"\");\n//   const size = useWindowSize();\n//   const stripePromise = loadStripe(\"process.env.REACT_APP_STRIPE_PUBLIC_KEY\");\n//   function useWindowSize() {\n//     // Initialize state with undefined width/height so server and client renders match\n//     // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n//     const [windowSize, setWindowSize] = useState({\n//       width: undefined,\n//       height: undefined,\n//     });\n//     useEffect(() => {\n//       // Handler to call on window resize\n//       function handleResize() {\n//         // Set window width/height to state\n//         setWindowSize({\n//           width: window.innerWidth,\n//           height: window.innerHeight,\n//         });\n//       }\n//       // Add event listener\n//       window.addEventListener(\"resize\", handleResize);\n//       // Call handler right away so state gets updated with initial window size\n//       handleResize();\n//       // Remove event listener on cleanup\n//       return () => window.removeEventListener(\"resize\", handleResize);\n//     }, []); // Empty array ensures that effect is only run on mount\n//     return windowSize;\n//   }\n//   const handleClick = async (e) => {\n//     e.preventDefault();\n//     const stripe = stripePromise;\n//     async function getData() {\n//       await axios(\"http://localhost:5000/create-checkout-session\", {\n//         method: \"POST\",\n//       })\n//         .then(function (response) {\n//           return response.json();\n//         })\n//         .then(function (session) {\n//           return stripe.redirectToCheckout({ sessionId: session.id });\n//         })\n//         .then(function (result) {\n//           // If `redirectToCheckout` fails due to a browser or network\n//           // error, you should display the localized error message to your\n//           // customer using `error.message`.\n//           if (result.error) {\n//             alert(result.error.message);\n//           }\n//         });\n//     }\n//   };\n//   const Message = () => {\n//     <section>\n//       <p>{message}</p>\n//     </section>;\n//   };\n\n//   useEffect(() => {\n//     // Check to see if this is a redirect back from Checkout\n//     const query = new URLSearchParams(window.location.search);\n//     if (query.get(\"success\")) {\n//       setMessage(\"Order placed! You will receive an email confirmation.\");\n//     }\n//     if (query.get(\"canceled\")) {\n//       setMessage(\n//         \"Order canceled -- continue to shop around and checkout when you're ready.\"\n//       );\n//     }\n//   }, []);\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"product\">\n//         <div>\n//           {size.width}px / {size.height}px\n//         </div>\n//         <img\n//           src=\"https://i.imgur.com/EHyR2nP.png\"\n//           alt=\"The cover of Stubborn Attachments\"\n//         />\n//         <div className=\"description\">\n//           <h3>Dev Test</h3>\n//           <h5>$280.00</h5>\n//         </div>\n//       </div>\n//       <div>\n//         <button\n//           className=\"btn btn-dark\"\n//           type=\"button\"\n//           id=\"checkout-button\"\n//           role=\"link\"\n//           onClick={handleClick}\n//         >\n//           Checkout\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}