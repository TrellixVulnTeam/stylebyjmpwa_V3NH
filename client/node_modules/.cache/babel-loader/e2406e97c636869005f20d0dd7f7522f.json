{"ast":null,"code":"var _jsxFileName = \"/Users/jon-michaelnarvaez/stylebyjmsa/client/src/components/stripe-button/stripe-button-component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport JMLogo from \"../../assets/jmlogo.png\";\nimport axios from \"axios\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst handleClick = async event => {\n  // Get Stripe.js instance\n  const stripe = await stripePromise; // Call your backend to create the Checkout Session\n\n  const response = await fetch(\"/create-checkout-session\", {\n    method: \"POST\"\n  });\n  const session = await response.json(); // When the customer clicks on the button, redirect them to Checkout.\n\n  const result = await stripe.redirectToCheckout({\n    sessionId: session.id\n  });\n\n  if (result.error) {// If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `result.error.message`.\n  }\n};\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: \"priceForStripe\",\n        token\n      }\n    }).then(response => {\n      alert(\"Payment Successful\");\n    }).catch(error => {\n      console.log(\"Payment error:\", JSON.parse(error));\n      alert(\"Ooops, there was an issue with your payment. Please check your information for errors\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    role: \"link\",\n    onClick: handleClick,\n    children: \"Checkout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StripeCheckoutButton;\nexport default StripeCheckoutButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/stylebyjmsa/client/src/components/stripe-button/stripe-button-component.jsx"],"names":["React","StripeCheckout","JMLogo","axios","loadStripe","stripePromise","process","env","REACT_APP_STRIPE_PUBLIC_KEY","handleClick","event","stripe","response","fetch","method","session","json","result","redirectToCheckout","sessionId","id","error","StripeCheckoutButton","price","onToken","token","url","data","amount","then","alert","catch","console","log","JSON","parse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,aAAa,GAAGD,UAAU,CAACE,OAAO,CAACC,GAAR,CAAYC,2BAAb,CAAhC;;AAEA,MAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnC;AACA,QAAMC,MAAM,GAAG,MAAMN,aAArB,CAFmC,CAInC;;AACA,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAAD,EAA6B;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAA7B,CAA5B;AAEA,QAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAtB,CAPmC,CASnC;;AACA,QAAMC,MAAM,GAAG,MAAMN,MAAM,CAACO,kBAAP,CAA0B;AAC7CC,IAAAA,SAAS,EAAEJ,OAAO,CAACK;AAD0B,GAA1B,CAArB;;AAIA,MAAIH,MAAM,CAACI,KAAX,EAAkB,CAChB;AACA;AACA;AACD;AACF,CAnBD;;AAqBA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBtB,IAAAA,KAAK,CAAC;AACJuB,MAAAA,GAAG,EAAE,SADD;AAEJZ,MAAAA,MAAM,EAAE,MAFJ;AAGJa,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,gBADJ;AAEJH,QAAAA;AAFI;AAHF,KAAD,CAAL,CAQGI,IARH,CAQSjB,QAAD,IAAc;AAClBkB,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,KAVH,EAWGC,KAXH,CAWUV,KAAD,IAAW;AAChBW,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,IAAI,CAACC,KAAL,CAAWd,KAAX,CAA9B;AACAS,MAAAA,KAAK,CACH,uFADG,CAAL;AAGD,KAhBH;AAiBD,GAlBD;;AAmBA,sBACE;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAErB,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;KAAMa,oB;AA2BN,eAAeA,oBAAf","sourcesContent":["import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport JMLogo from \"../../assets/jmlogo.png\";\nimport axios from \"axios\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst handleClick = async (event) => {\n  // Get Stripe.js instance\n  const stripe = await stripePromise;\n\n  // Call your backend to create the Checkout Session\n  const response = await fetch(\"/create-checkout-session\", { method: \"POST\" });\n\n  const session = await response.json();\n\n  // When the customer clicks on the button, redirect them to Checkout.\n  const result = await stripe.redirectToCheckout({\n    sessionId: session.id,\n  });\n\n  if (result.error) {\n    // If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `result.error.message`.\n  }\n};\n\nconst StripeCheckoutButton = ({ price }) => {\n  const onToken = (token) => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: \"priceForStripe\",\n        token,\n      },\n    })\n      .then((response) => {\n        alert(\"Payment Successful\");\n      })\n      .catch((error) => {\n        console.log(\"Payment error:\", JSON.parse(error));\n        alert(\n          \"Ooops, there was an issue with your payment. Please check your information for errors\"\n        );\n      });\n  };\n  return (\n    <button role=\"link\" onClick={handleClick}>\n      Checkout\n    </button>\n  );\n};\n\nexport default StripeCheckoutButton;\n"]},"metadata":{},"sourceType":"module"}